/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-07-05 13:10:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/js/jquery.min.js\"></script>\r\n");
      out.write("    <title>SpringBoot+WebSocket+JSP</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"margin: 45px;\">\r\n");
      out.write("    <h4>websocket</h4>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("        <label for=\"content\"></label>\r\n");
      out.write("        <textarea id=\"content\" readonly=\"readonly\" cols=\"80\" rows=\"15\"></textarea>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\" style=\"margin-top: 8px\">\r\n");
      out.write("        <textarea id=\"message\" cols=\"80\" rows=\"5\" placeholder=\"请输入消息\"></textarea>\r\n");
      out.write("        <div style=\"margin-top: 10px\">\r\n");
      out.write("            <button id=\"toSend\" class=\"btn btn-info\">发送</button>\r\n");
      out.write("            <button id=\"exit\" class=\"btn btn-danger\">离开</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        //页面加载完毕，触发该js函数\r\n");
      out.write("        $(function () {\r\n");
      out.write("            var ws;\r\n");
      out.write("            //判断浏览器是否支持websocket\r\n");
      out.write("            if (\"WebSocket\" in window) {\r\n");
      out.write("                //ajax 2006年 支持了 ajaxhttpRequest\r\n");
      out.write("                var baseUrl = 'ws://localhost:8080/websocket/123';\r\n");
      out.write("                //建立与服务端的websocket连接\r\n");
      out.write("                ws = new WebSocket(baseUrl);\r\n");
      out.write("\r\n");
      out.write("                // 连通之后的回调事件，建立连接\r\n");
      out.write("                ws.onopen = function () {\r\n");
      out.write("                    console.log(\"建立 websocket 连接...\");\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                // 接收后台服务端的消息\r\n");
      out.write("                ws.onmessage = function (event) {\r\n");
      out.write("                    $('#content').append(event.data + '\\n\\n');\r\n");
      out.write("                    console.log(\"接收到服务端发送的消息...\" + event.data + '\\n');\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                ws.onerror = function (event) {\r\n");
      out.write("                    console.log(\"websocket发生错误...\" + event + '\\n');\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 连接关闭的回调事件\r\n");
      out.write("                ws.onclose = function () {\r\n");
      out.write("                    $('#content').append('[' + userName + '] 已离开!');\r\n");
      out.write("                    console.log(\"关闭 websocket 连接...\");\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("            } else {\r\n");
      out.write("                // 浏览器不支持 WebSocket\r\n");
      out.write("                alert(\"您的浏览器不支持WebSocket!\");\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 客户端发送消息到服务器\r\n");
      out.write("            $('#toSend').click(function () {\r\n");
      out.write("                sendMsg();\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $(document).keyup(function (event) {\r\n");
      out.write("                // 回车键事件\r\n");
      out.write("                if (event.keyCode == 13) {\r\n");
      out.write("                    sendMsg();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 发送消息\r\n");
      out.write("            function sendMsg() {\r\n");
      out.write("                //websocket发送消息\r\n");
      out.write("                ws.send($('#message').val());\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 退出\r\n");
      out.write("            $('#exit').click(function () {\r\n");
      out.write("                if (ws) {\r\n");
      out.write("                    ws.close();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
